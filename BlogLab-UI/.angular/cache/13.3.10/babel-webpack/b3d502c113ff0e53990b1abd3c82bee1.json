{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ApplicationUserLogin } from 'src/app/models/account/application-user-login.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Must be between 5-20 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Must be between 10-50 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(accountService, router, formBuilder) {\n      this.accountService = accountService;\n      this.router = router;\n      this.formBuilder = formBuilder;\n\n      if (this.accountService.isLoggedIn()) {\n        this.router.navigate(['/dashboard']);\n      }\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        username: [null, [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n        password: [null, [Validators.required, Validators.minLength(10), Validators.maxLength(50)]]\n      });\n    }\n\n    isTouched(field) {\n      return this.loginForm.get(field).touched;\n    }\n\n    hasErrors(field) {\n      return this.loginForm.get(field).errors;\n    }\n\n    hasError(field, error) {\n      return !!this.loginForm.get(field).hasError(error);\n    }\n\n    onSubmit() {\n      let applicationUserLogin = new ApplicationUserLogin(this.loginForm.get(\"username\").value, this.loginForm.get(\"password\").value);\n      this.accountService.login(applicationUserLogin).subscribe(() => {\n        this.router.navigate(['/dashboard']);\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 14,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"mt-5\"], [1, \"text-dark\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Username\", 1, \"form-control\", \"form-control-lg\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\", 3, \"ngClass\"], [1, \"btn\", \"btn-block\", \"mb-3\", \"bg-primary\", \"text-light\", 3, \"disabled\"], [1, \"invalid-feedback\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 3);\n        i0.ɵɵtext(6, \"Get to your dashboard and start blogging\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 0, \"div\", 7);\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, ctx.hasErrors(\"username\") && ctx.isTouched(\"username\"), !ctx.hasErrors(\"username\") && ctx.isTouched(\"username\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"username\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"username\", \"minlength\") || ctx.hasError(\"username\", \"maxlength\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c0, ctx.hasErrors(\"password\") && ctx.isTouched(\"password\"), !ctx.hasErrors(\"password\") && ctx.isTouched(\"password\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"password\", \"minlength\") || ctx.hasError(\"password\", \"maxlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgClass, i4.NgIf],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}